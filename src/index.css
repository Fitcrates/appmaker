@tailwind base;
@tailwind components;
@tailwind utilities;

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.tilt-neon {
  font-family: 'Tilt Neon', cursive; /* Use the imported font */
  font-size: 3rem; /* Adjust size as needed */
}
.tilt-neon2 {
  font-family: 'Tilt Neon', cursive; /* Use the imported font */
  font-size: 1rem; /* Adjust size as needed */
}
.tilt-neon3 {
  font-family: 'Tilt Neon', cursive; /* Use the imported font */
  font-size: 2rem; /* Adjust size as needed */
}
.tilt-neon4 {
  font-family: 'Tilt Neon', cursive; /* Use the imported font */
  font-size: 1.5rem; /* Adjust size as needed */
}

.backgroundMain {
  background-image: 
    url("https://www.transparenttextures.com/patterns/gplay.png"),
    linear-gradient(to bottom right, #5003cc,  #2f0468, #030105);
  background-size: fixed; /* Adjust as needed */
  background-blend-mode: overlay;
}


.modalOpen {
background-color: white;
opacity: 1;
background-image: url("https://www.transparenttextures.com/patterns/gplay.png");

}

.goog-te-banner-frame.skiptranslate {
  display: none !important;
}

iframe.goog-te-banner-frame {
  display: none !important;
}

.goog-te-banner-frame {
  display: none !important;
}

/* Fix for body shifting when Google Translate is active */
body {
  top: 0 !important;
}

/* Hide Google branding but keep functionality */
.goog-te-gadget {
  font-size: 0 !important; /* Hide all text within the gadget */
}

.goog-te-gadget select, .goog-te-gadget a, .goog-te-gadget img {
  font-size: 12px !important; /* Restore font size for select, links, and images */
}

.goog-te-menu-frame {
  box-shadow: none !important;
}

/* Important: these are the styles that were active when it was working for you */
.VIpgJd-ZVi9od-ORHb-OEVmcd {
  display: none !important;
}

.VIpgJd-ZVi9od-ORHb {
  display: none !important;
}

.VIpgJd-ZVi9od-l4eHX-hSRGPd {
  display: none !important;
}

/* Ensure preview stays within viewport */
.anime-preview {
  position: fixed;
  z-index: 50;
  max-width: calc(100% - 20px);
  max-height: calc(100% - 20px);
  width: auto;
  height: auto;
  max-width: 400px;
  background: white;
  
  /* Background for the popup */
  border-radius: 8px; /* Rounded corners */
  transform: translate(-50%, -50%);
}

.fixed.z-50 {
  position: fixed;
  z-index: 50;
  width: 300px; /* Consistent with the preview width in the logic */
  max-height: 90vh;
  overflow-y: auto; /* For content overflow */
}
.anime-preview {
  overflow-y: auto; /* Allow vertical scrolling */
  overflow-x: hidden; /* Avoid horizontal scrolling if possible */
  padding: 1rem;
}
/* Fallback backdrop style (optional) */
.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(15, 15, 15, 0.5); /* Dark overlay */
  z-index: 49; /* Below the popup */
}

/* Placeholder image styles */
.placeholder-blur {
  filter: blur(20px);
  transform: scale(1.1);
  transition: opacity 0.3s ease-in-out;
}

.placeholder-blur.loaded {
  opacity: 0;
}

.main-image {
  opacity: 0;
  transition: opacity 0.5s ease-in-out;
}

.main-image.loaded {
  opacity: 1;
}

/* Add smooth transition for background images */
[style*="background-image"] {
  transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
  background-size: cover;
  background-position: center;
}

/* Ensure content starts from the top */
.h-screen {
  height: 100vh;
  min-height: 100vh;
}

/* Footer styles */
footer {
  background-color: #1a1a1a;
  color: white;
  position: relative;
  z-index: 10;
  width: 100%;
}
.inset-shadow {
  box-shadow: inset 0 0 0 2px #fa448c, inset 0 6px 10px rgba(250, 68, 140, 0.658);
}
.inset-shadowGreen {
  box-shadow: inset 0 0 0 2px #4ef1d6, inset 0 6px 10px rgba(78, 241, 214, 0.658);
}
.inset-shadowBlue {
  box-shadow: inset 0 0 0 2px #40a3ff, inset 0 6px 10px rgba(45, 155, 245, 0.658);
}
.inset-shadowRed {
  box-shadow: inset 0 0 0 2px #eb1010, inset 0 6px 10px rgba(235, 16, 16, 0.658);
}
.inset-shadowLightBlue {
  box-shadow: inset 0 0 0 2px #fa8a20, inset 0 6px 10px #fa8a20;
}


/* Content section styles */
#content {
  width: 100vw !important;
  max-width: 100vw !important;
  margin-left: 0 !important;
  margin-right: 0 !important;
  overflow-x: hidden;
  min-height: 100vh !important;
  position: relative;
  z-index: 10;
  background-color: white;
  display: flex;
  flex-direction: column;
}

/* Ensure content covers hero */
.hero-section {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  z-index: 0;
  background-size: cover;
  background-position: center;
}

/* Container styles */
.container {
  max-width: 100% !important;
  width: 100% !important;
  position: relative;
  flex: 1;
}

/* Ensure proper scrolling behavior */
html, body, #root {
  width: 100%;
  max-width: 100%;
  overflow-x: hidden;
  scroll-behavior: smooth;
}

/* Results grid styles */
.grid {
  display: grid;
  grid-gap: 1.5rem;
  margin-bottom: 2rem;
}

@media (min-width: 640px) {
  .grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 768px) {
  .grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (min-width: 1024px) {
  .grid {
    grid-template-columns: repeat(4, 1fr);
  }
}

@media (min-width: 1280px) {
  .grid {
    grid-template-columns: repeat(5, 1fr);
  }
}
/* Cyberpunk Neon Range Slider */
#range-slider-gradient {
  height: 8px;
  margin: 0;
  border-radius: 4px;
  background: rgba(0, 0, 0, 0.8);
  border: 1px solid #0ff;
  box-shadow: 0 0 10px rgba(0, 255, 255, 0.5), 
              inset 0 0 5px rgba(0, 255, 255, 0.2);
  position: relative;
  overflow: visible;
}

/* Add scanline effect to track */
#range-slider-gradient::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: repeating-linear-gradient(
    to bottom,
    transparent,
    transparent 2px,
    rgba(0, 255, 255, 0.05) 2px,
    rgba(0, 255, 255, 0.05) 4px
  );
  pointer-events: none;
  z-index: 1;
}

#range-slider-gradient .range-slider__thumb {
  border: 2px solid #0ff;
  height: 20px;
  width: 20px;
  border-radius: 2px;
  box-sizing: border-box;
  background: #000;
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.8);
  transition: all 0.15s ease;
  transform: rotate(0deg) translate(-50%, -50%);
  cursor: grab;
  position: absolute;
  top: 50%; /* Center vertically */
  margin-left: 0; /* Reset any margins */
  margin-top: 0; /* Reset any margins */
  
}

#range-slider-gradient .range-slider__thumb::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 6px;
  height: 6px;
  background: #0ff;
  transform: translate(-45%, -45%);
 
  box-shadow: 0 0 8px rgba(0, 255, 255, 1);
}

#range-slider-gradient .range-slider__thumb:active {
  cursor: grabbing;
  
  transform: rotate(0deg) translate(-50%, -50%) scale(1.1);

}

#range-slider-gradient .range-slider__thumb[data-lower] {
  background: #000;
  border-color: #0c10fc;
  box-shadow: 0 0 15px rgba(12, 16, 252, 0.8);
}

#range-slider-gradient .range-slider__thumb[data-lower]::after {
  background: #0c10fc;
  box-shadow: 0 0 8px rgba(12, 16, 252, 1);
}

#range-slider-gradient .range-slider__thumb[data-upper] {
  background: #000;
  border-color: #0effff;
  box-shadow: 0 0 15px rgba(14, 255, 255, 0.8);
}

#range-slider-gradient .range-slider__thumb[data-upper]::after {
  background: #0effff;
  box-shadow: 0 0 8px rgba(14, 255, 255, 1);
}

#range-slider-gradient .range-slider__range {
  background: linear-gradient(to right, #0c10fc, #0effff);
  height: 6px;
  margin: 0;
  box-shadow: 0 0 15px rgba(14, 255, 255, 0.8), 
              inset 0 0 5px rgba(14, 255, 255, 0.4);
  background-size: 200% 100%;
  background-position: 50% 0;
  position: relative;
  overflow: hidden;
}

/* Electric current effect */
#range-slider-gradient .range-slider__range::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent,
    rgba(14, 255, 255, 0.7),
    transparent
  );
  animation: neonPulse 2s infinite linear;
}

#range-slider-gradient .range-slider__range[data-active],
#range-slider-gradient
  .range-slider__thumb[data-active]
  ~ .range-slider__range {
  animation: move-bg 1.5s infinite linear;
}

#range-slider-gradient .range-slider__thumb[data-active] {
  box-shadow: 0 0 20px 5px rgba(0, 255, 255, 0.9);
}

/* Animation for the electric current effect */
@keyframes neonPulse {
  0% {
    left: -100%;
  }
  50% {
    left: 100%;
  }
  100% {
    left: -100%;
  }
}

@keyframes move-bg {
  0% {
    background-position: 50% 0;
  }
  25% {
    background-position: 100% 0;
  }
  50% {
    background-position: 50% 0;
  }
  75% {
    background-position: 0% 0;
  }
  100% {
    background-position: 50% 0;
  }
}

/* Pink variant */
#range-slider-gradient.pink {
  border-color: #ff00ff;
  box-shadow: 0 0 10px rgba(255, 0, 255, 0.5), 
              inset 0 0 5px rgba(255, 0, 255, 0.2);
}

#range-slider-gradient.pink .range-slider__thumb {
  border-color: #ff00ff;
  box-shadow: 0 0 15px rgba(255, 0, 255, 0.8);
}

#range-slider-gradient.pink .range-slider__thumb::after {
  background: #ff00ff;
  box-shadow: 0 0 8px rgba(255, 0, 255, 1);
}

#range-slider-gradient.pink .range-slider__range {
  background: linear-gradient(to right, #cc00cc, #ff00ff);
  box-shadow: 0 0 15px rgba(255, 0, 255, 0.8), 
              inset 0 0 5px rgba(255, 0, 255, 0.4);
}

#range-slider-gradient.pink .range-slider__range::before {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 0, 255, 0.7),
    transparent
  );
}

/* Green variant */
#range-slider-gradient.green {
  border-color: #0f0;
  box-shadow: 0 0 10px rgba(0, 255, 0, 0.5), 
              inset 0 0 5px rgba(0, 255, 0, 0.2);
}

#range-slider-gradient.green .range-slider__thumb {
  border-color: #0f0;
  box-shadow: 0 0 15px rgba(0, 255, 0, 0.8);
}

#range-slider-gradient.green .range-slider__thumb::after {
  background: #0f0;
  box-shadow: 0 0 8px rgba(0, 255, 0, 1);
}

#range-slider-gradient.green .range-slider__range {
  background: linear-gradient(to right, #00cc00, #0f0);
  box-shadow: 0 0 15px rgba(0, 255, 0, 0.8), 
              inset 0 0 5px rgba(0, 255, 0, 0.4);
}

#range-slider-gradient.green .range-slider__range::before {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(0, 255, 0, 0.7),
    transparent
  );
}

/* Animated button edge */
.buttonMain {
  position: relative;
  z-index: 1;
  overflow: visible; /* Ensure the pseudo-elements don't overflow */
  border-radius: 9999px; /* Tailwind's rounded-full equivalent */
}

@property --angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.buttonMain::after,
.buttonMain::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  filter: blur(2px); /* Disable for clean border */
  transform: translate(-50%, -50%);
  width: calc(100% + 3px); /* Account for padding */
  height: calc(100% + 3px); /* Account for padding */
  background-image: conic-gradient(
    from var(--angle),
    /* adjust to change gradient */
    #29E7CD,
    #29E7CD,  
    #29E7CD,
    #a30ee9,
    #a30ee9
  );
  z-index: -1;
  border-radius: 9999px; /* Tailwind's rounded-full equivalent */
  animation: 4s spin linear infinite;
}

.buttonMain::before {
  filter: blur(0.5rem);
  opacity: 0.5;
}

@keyframes spin {
  from {
    --angle: 0deg;
  }
  to {
    --angle: 360deg;
  }
}

/* Neon button with Tailwind Teal-300 colors */
.buttonNeon {
  --glow-color: #C711A4;
  --glow-spread-color: #C711A4; /* Soft glow */
  --enhanced-glow-color: rgb(18, 70, 58); /* Darker teal for depth, inner color */
  --btn-color: rgb(13, 56, 46); /* Deep teal-green background, inner color */

  border: 0.25em solid var(--glow-color);
  padding: 0.5em 3em;
  color: var(--glow-color);
  font-size: 15px;
  font-weight: normal;
  background-color: var(--btn-color);
  border-radius: 10em;
  outline: none;
  box-shadow:
    0 0 0.4em 0.25em var(--glow-color),
    0 0 0em 0em var(--glow-spread-color),
    inset 0 0 0.25em 0.25em var(--glow-color);
  text-shadow: 0 0 0.2em var(--glow-color);
  position: relative;
  transition: all 0.3s ease-in-out;
}

.buttonNeon::after {
  pointer-events: none;
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 80%;
  width: 80%;
  background-color: var(--glow-spread-color);
  filter: blur(2em);
  opacity: 0.7;
  z-index: -1;
  border-radius: 1em;
}

/* Hover effect: Invert colors for a cool interactive glow */
.buttonNeon:hover {
  color: var(--btn-color);
  background-color: var(--glow-color);
  box-shadow:
    0 0 0.75em 0.3em var(--glow-color),
    0 0 0.5em 0.5em var(--glow-spread-color),
    inset 0 0 0.15em 0.15em var(--glow-color);
}

/* Active (Click) effect: Softer glow */
.buttonNeon:active {
  box-shadow:
    0 0 0.6em 0.25em var(--glow-color),
    0 0 0.5em 0.5em var(--glow-spread-color),
    inset 0 0 0.5em 0.25em var(--glow-color);
}

/* checkbox */
.checkbox-custom {
  position: relative; /* Position relative for the pseudo-element */
  width: 1.25rem; /* Adjust size as needed */
  height: 1.25rem; /* Adjust size as needed */
  border: 2px solid #40ffff; /* Ring color */
  background-color: transparent; /* Background color */
  box-shadow: 0 4px 10px rgba(64, 255, 255, 0.5); /* Shadow */
  transition: all 0.1s ease; /* Transition for hover effects */
  display: inline-block; /* Make it inline-block */
}

input[type="checkbox"]:checked + .checkbox-custom {
  background-color: #40ffff; /* Background color when checked */
  box-shadow: 0 4px 10px rgba(64, 255, 255, 0.5); /* Shadow when checked */
}

.checkbox-custom:hover {
  box-shadow: 0 4px 15px rgba(64, 255, 255, 0.5); /* Shadow on hover */
}

.checkbox-custom:focus {
  outline: none; /* Remove default outline */
  box-shadow: 0 0 0 4px rgba(64, 255, 255, 0.5); /* Focus ring */
}

/* Check mark styling */
.checkbox-custom::after {
  content: ''; /* Empty content for the check mark */
  position: absolute; /* Position absolute to place it inside the checkbox */
  left: 5px; /* Adjust position */
  top:  0px; /* Adjust position */
  width: 6px; /* Width of the check mark */
  height: 12px; /* Height of the check mark */
  border: solid black; /* Color of the check mark */
  border-width: 0 2px 2px 0; /* Create a check mark shape */
  transform: rotate(45deg); /* Rotate to form a check mark */
  opacity: 0; /* Initially hidden */
  transition: opacity 0.1s ease; /* Transition for smooth appearance */
}

input[type="checkbox"]:checked + .checkbox-custom::after {
  opacity: 1; /* Show the check mark when checked */
}

.video-container {
  position: relative;
  top: 0;
  left: 0;
  width: 100vw !important;
  height: 100vh !important;
  overflow: hidden;
  z-index: 2; /* Keep background behind content */
  background: black; /* Fallback in case video doesn't load */
}

.background-video {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: 2;
}


.overlay-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  z-index: 3;
}

.overlay-text h1 {
  color: white;
  font-size: 3rem;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
  padding: 1rem;
}

@media (max-width: 768px) {
  .overlay-text h1 {
    font-size: 2rem;
  }
}




/* Fixed video and overlay text */

.fixed-bg {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: url('./media/ParalaxAnime.mp4') no-repeat center center;
  background-size: cover;
  z-index: -1;
}

/* Ensure hero-section remains above the background */
.hero-section {
  position: relative;
  z-index: 1;
}
/* iOS-specific fixes */
.ios-main {
  position: relative;
  z-index: 1;
}

.bg-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
}

.ios-bg-wrapper {
  position: absolute;
  height: 100vh;
  /* Prevent background stretching on iOS */
  background-size: cover;
  background-attachment: scroll;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  /* Force hardware acceleration */
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  perspective: 1000;
}

.ios-section {
  /* Ensure proper rendering on iOS */
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  /* Prevent unwanted stretching */
  height: 100vh;
  /* Use viewport units for iOS */
  height: -webkit-fill-available;
}

/* Force proper aspect ratio on iOS */
@supports (-webkit-touch-callout: none) {
  .fixed-bg {
    background-attachment: scroll;
    /* Maintain aspect ratio */
    aspect-ratio: 16/9;
    min-height: 100vh;
    min-height: -webkit-fill-available;
  }
}



/* Button neon */
.cyberpunk-neon-btn {
  position: relative;
  display: inline-flex;
  padding: 8px 20px;
  background-color: transparent;
  color: #fff;
  align-items: center;
  gap: 0.2em;
  justify-content: center;
  border: 2px solid #0ff;
  border-radius: 15px;
  text-transform: uppercase;
  letter-spacing: 2px;
  overflow: hidden;
  transition: all 0.3s ease;
  cursor: pointer;
  box-shadow: 
    0 0 8px #4ef1d6,
    0 0 10px rgba(53, 248, 248, 0.5),
    inset 0 0 5px rgba(0, 255, 255, 0.2);
}

.cyberpunk-neon-btn:hover {
  background-color: rgba(0, 0, 0, 0.6);
  color: #fff;
  box-shadow: 
    0 0 8px #4ef1d6,
    0 0 10px rgba(53, 248, 248, 0.692),
    inset 0 0 10px rgba(0, 255, 255, 0.4);
  text-shadow: 0 0 8px rgba(255, 255, 255, 0.8);
  border-color: #4ef1d6;
}

.cyberpunk-neon-btn:active {
  transform: scale(0.97);
}

.cyberpunk-neon-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(0, 255, 255, 0.4),
    transparent
  );
  transition: 0.5s;
}

/* Changed from a transition to an animation */
.cyberpunk-neon-btn:hover::before {
  animation: neonSweep 2s linear infinite;
}

/* New animation for the infinite sweep effect */
@keyframes neonSweep {
  0% {
    left: -100%;
  }
  50% {
    left: 100%;
  }
  100% {
    left: -100%;
  }
}

.cyberpunk-neon-btn .text {
  font-family: 'Tilt Neon', cursive;
  font-size: 1rem;
  position: relative;
  z-index: 1;
}

/* Glitch effect on hover */
.cyberpunk-neon-btn:hover .text {
  animation: glitch 0.5s linear infinite;
}

@keyframes glitch {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  100% {
    transform: translate(0);
  }
}

/* Alternative neon colors - can be added as modifier classes */
.cyberpunk-neon-btn.pink {
  border-color: #ff00ff;
  box-shadow: 
    0 0 10px #ff00ff,
    0 0 20px rgba(255, 0, 255, 0.5),
    inset 0 0 5px rgba(255, 0, 255, 0.2);
}

.cyberpunk-neon-btn.pink:hover {
  box-shadow: 
    0 0 15px #ff00ff,
    0 0 30px rgba(255, 0, 255, 0.6),
    inset 0 0 10px rgba(255, 0, 255, 0.4);
}

.cyberpunk-neon-btn.pink::before {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 0, 255, 0.4),
    transparent
  );
}

.cyberpunk-neon-btn.red {
  border-color: rgb(255, 34, 34);
  box-shadow: 
    0 0 10px rgb(255, 34, 34),
    0 0 20px rgba(255, 34, 34, 0.5),
    inset 0 0 5px rgba(255, 34, 34, 0.2);
}

.cyberpunk-neon-btn.red:hover {
  box-shadow: 
    0 0 15px rgb(255, 34, 34),
    0 0 30px rgba(255, 34, 34, 0.6),
    inset 0 0 10px rgba(255, 34, 34, 0.4);
}

.cyberpunk-neon-btn.red::before {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 34, 34, 0.4),
    transparent
  );
}

.cyberpunk-neon-btn.blue {
  border-color: rgb(65, 123, 250);
  box-shadow: 
    0 0 8px rgb(65, 123, 250),
    0 0 10px rgba(65, 123, 250, 0.5),
    inset 0 0 5px rgba(65, 123, 250, 0.2);
}

.cyberpunk-neon-btn.blue:hover {
  box-shadow: 
    0 0 8px rgb(65, 123, 250),
    0 0 10px rgba(65, 123, 250, 0.6),
    inset 0 0 10px rgba(65, 123, 250, 0.4);
}

.cyberpunk-neon-btn.blue::before {
  background: linear-gradient(
    90deg,
    transparent,
    rgb(65, 123, 250),
    transparent
  );
}


/* small neon button */
.cyberpunk-neon2-btn {
  position: relative;
  display: inline-flex;
  padding: 0px 4px;
  background-color: transparent;
  color: #fff;
  align-items: center;
  gap: 0.2em;
  justify-content: center;
  border: 1px solid #0ff;
  border-radius: 5px;
  text-transform: uppercase;
  letter-spacing: 1px;
  overflow: hidden;
  transition: all 0.3s ease;
  cursor: pointer;
  box-shadow: 
    0 0 10px #0ff,
    0 0 20px rgba(0, 255, 255, 0.5),
    inset 0 0 5px rgba(0, 255, 255, 0.2);
}

.cyberpunk-neon2-btn:hover {
  background-color: rgba(0, 0, 0, 0.6);
  color: #fff;
  box-shadow: 
    0 0 15px #0ff,
    0 0 30px rgba(0, 255, 255, 0.6),
    inset 0 0 10px rgba(0, 255, 255, 0.4);
  text-shadow: 0 0 8px rgba(255, 255, 255, 0.8);
  border-color: #0ff;
}

.cyberpunk-neon2-btn:active {
  transform: scale(0.97);
}

.cyberpunk-neon2-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(0, 255, 255, 0.4),
    transparent
  );
  transition: 0.5s;
}

/* Changed from a transition to an animation */
.cyberpunk-neon2-btn:hover::before {
  animation: neonSweep 2s linear infinite;
}

/* New animation for the infinite sweep effect */
@keyframes neonSweep {
  0% {
    left: -100%;
  }
  50% {
    left: 100%;
  }
  100% {
    left: -100%;
  }
}

.cyberpunk-neon2-btn .text {
  font-family: 'Tilt Neon', cursive;
  font-size: 0.9rem;
  position: relative;
  z-index: 1;
}

/* Alternative neon colors - can be added as modifier classes */
.cyberpunk-neon2-btn.pink {
  border-color: #ff00ff;
  box-shadow: 
    0 0 10px #ff00ff,
    0 0 20px rgba(255, 0, 255, 0.5),
    inset 0 0 5px rgba(255, 0, 255, 0.2);
}

.cyberpunk-neon2-btn.pink:hover {
  box-shadow: 
    0 0 15px #ff00ff,
    0 0 30px rgba(255, 0, 255, 0.6),
    inset 0 0 10px rgba(255, 0, 255, 0.4);
}

.cyberpunk-neon2-btn.pink::before {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 0, 255, 0.4),
    transparent
  );
}

.cyberpunk-neon2-btn.green {
  border-color: #1cf739;
  text-transform: lowercase;
  box-shadow: 
    0 0 10px #1cf739,
    0 0 20px rgba(28, 247, 57, 0.5),
    inset 0 0 5px rgba(28, 247, 57, 0.2);
}

.cyberpunk-neon2-btn.green:hover {
  box-shadow: 
    0 0 15px #1cf739,
    0 0 30px rgba(28, 247, 57, 0.6),
    inset 0 0 10px rgba(28, 247, 57, 0.4);
}

.cyberpunk-neon2-btn.green::before {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(28, 247, 57, 0.4),
    transparent
  );
}
